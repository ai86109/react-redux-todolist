{"version":3,"sources":["redux/actionType.js","components/AddTodoForm.js","containers/AddTodoForm.js","redux/actions.js","components/TodoFilter.js","containers/TodoFilter.js","components/UpdateTodo.js","components/Todos.js","containers/Todos.js","App.js","reportWebVitals.js","redux/reducers/todos.js","redux/reducers/filters.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ADD_TODO","COMPLETED_TODO","UPDATE_TODO","DELETE_TODO","CLEAR_TODOS","CHANGE_FILTER","AddTodoFormBlock","styled","form","AddTodoInput","input","SubmitButton","button","mapDispatchToProps","addTodo","content","type","payload","connect","store","todos","todoState","useState","value","setValue","onSubmit","e","preventDefault","onChange","target","TodoFilterContainer","div","TodoFilterButtons","TodoFilterButton","TodoFilterButtonActive","ClearButton","changeFilter","filter","clearTodos","filterState","onClick","EditInput","TodoListText","TodoListTextActive","UpdateTodo","todo","updateTodo","isEditing","setIsEditing","editValue","setEditValue","handleUpdateTodo","onKeyPress","key","id","completed","onDoubleClick","TodoListContainer","TodoListBody","TodoListCheckbox","TodoListCheckboxActive","TodoListDelete","completedTodo","deleteTodo","map","TodoBox","Title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","todoId","initialState","combineReducers","state","action","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af96ee26.chunk.js","sourcesContent":["export const ADD_TODO = 'add_todo'\nexport const COMPLETED_TODO = 'completed_todo'\nexport const UPDATE_TODO = 'update_todo'\nexport const DELETE_TODO = 'delete_todo'\nexport const CLEAR_TODOS = 'clear_todos'\n\nexport const CHANGE_FILTER = 'change_filter'","import React, { useState } from 'react'\nimport styled from 'styled-components';\n\nconst AddTodoFormBlock = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 5px;\n`;\n\nconst AddTodoInput = styled.input`\n  width: 92%;\n  height: 32px;\n  margin-right: 2px;\n`;\n\nconst SubmitButton = styled.button`\n  padding: 5px 7px;\n`;\n\nexport default function AddTodoForm({addTodo}) {\n  const [value, setValue] = useState(\"\")\n  return (\n    <AddTodoFormBlock \n      onSubmit={(e) => {\n        e.preventDefault()\n        addTodo(value)\n        setValue(\"\")\n      }}\n    >\n      <AddTodoInput\n        value={value} \n        onChange={(e) => setValue(e.target.value)}\n      />\n      <SubmitButton>新增</SubmitButton>\n    </AddTodoFormBlock>\n  )\n}\n","import { connect } from 'react-redux'\nimport { addTodo } from '../redux/actions'\nimport AddTodoForm from '../components/AddTodoForm'\n\nconst mapStateToProps = (store) => {\n  return {\n    todos: store.todoState.todos\n  }\n}\n\nconst mapDispatchToProps =  {\n  addTodo,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodoForm)","import { ADD_TODO, CHANGE_FILTER, COMPLETED_TODO, UPDATE_TODO, DELETE_TODO, CLEAR_TODOS } from './actionType'\n\nexport function addTodo(content) {\n  return {\n    type: ADD_TODO,\n    payload: {\n      content,\n    }\n  }\n}\n\nexport function completedTodo(id) {\n  return {\n    type: COMPLETED_TODO,\n    payload: {\n      id,\n    }\n  }\n}\n\nexport function updateTodo(id, content) {\n  return {\n    type: UPDATE_TODO,\n    payload: {\n      id,\n      content,\n    }\n  }\n}\n\nexport function deleteTodo(id) {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id,\n    }\n  }\n}\n\nexport function clearTodos() {\n  return {\n    type: CLEAR_TODOS,\n  }\n}\n\nexport function changeFilter(filter) {\n  return {\n    type: CHANGE_FILTER,\n    payload: {\n      filter,\n    }\n  }\n}","import React from 'react'\nimport styled from 'styled-components';\n\nconst TodoFilterContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background: grey;\n  padding: 10px 10px 0 10px;\n`;\n\nconst TodoFilterButtons = styled.div`\n  display: flex;\n`;\n\nconst TodoFilterButton = styled.div`\n  padding: 8px 16px;\n  color: white;\n  cursor: pointer;\n  &:hover {\n    background: white;\n    color: black;\n  }\n`;\n\nconst TodoFilterButtonActive = styled.div`\n  padding: 8px 16px;\n  color: white;\n  cursor: pointer;\n  background: white;\n  color: black;\n`;\n\nconst ClearButton = styled.button`\n  color: white;\n  background: rgba(0.3, 0.3, 0.3, 0.6);\n  margin: 0 0 10px 10px;\n`;\n\nexport default function TodoFilter({changeFilter, clearTodos, filter}) {\n  return (\n    <TodoFilterContainer>\n      <TodoFilterButtons>\n        {filter === 'all' ? <TodoFilterButtonActive>All</TodoFilterButtonActive> : <TodoFilterButton onClick={() => changeFilter('all')}>All</TodoFilterButton>}\n        {filter === 'task' ? <TodoFilterButtonActive>Task</TodoFilterButtonActive> : <TodoFilterButton onClick={() => changeFilter('task')}>Task</TodoFilterButton>}\n        {filter === 'completed' ? <TodoFilterButtonActive>Completed</TodoFilterButtonActive> : <TodoFilterButton onClick={() => changeFilter('completed')}>Completed</TodoFilterButton>}\n      </TodoFilterButtons>\n      <ClearButton onClick={() => clearTodos()}>clear all</ClearButton>\n    </TodoFilterContainer>\n  )\n}\n","import { connect } from 'react-redux'\nimport { changeFilter, clearTodos } from '../redux/actions'\nimport TodoFilter from '../components/TodoFilter'\n\nconst mapStateToProps = (store) => {\n  return {\n    filter: store.filterState.filter\n  }\n}\n\nconst mapDispatchToProps =  {\n  changeFilter,\n  clearTodos,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoFilter)","import React, { useState } from 'react'\nimport styled from 'styled-components';\n\nconst EditInput = styled.input`\n  height: 20px;\n  margin-right: 2px;\n`;\n\nconst TodoListText = styled.div`\n  font-size: 18px;\n`;\n\nconst TodoListTextActive = styled.div`\n  font-size: 18px;\n  text-decoration: line-through;\n  color: rgb(111, 110, 110);\n`;\n\nexport default function UpdateTodo({todo, updateTodo}) {\n  const [isEditing, setIsEditing] = useState(false)\n  const [editValue, setEditValue] = useState(todo.content)\n\n  const handleUpdateTodo = () => {\n    setIsEditing(true)\n  }\n\n  const handleKeyPress = (e) => {\n    if(e.key !== 'Enter') return\n    if(e.target.value === '') return\n    updateTodo(todo.id, editValue)\n    setIsEditing(false)\n  }\n\n  return (\n    <>\n      {\n        isEditing ? \n        <EditInput \n          value={editValue} \n          onChange={(e) => setEditValue(e.target.value)}\n          onKeyPress={handleKeyPress}\n        /> :\n        (todo.completed === true ? \n          <TodoListTextActive onDoubleClick={handleUpdateTodo}>{todo.content}</TodoListTextActive> :\n          <TodoListText onDoubleClick={handleUpdateTodo}>{todo.content}</TodoListText>\n        )\n      }\n    </>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components';\nimport UpdateTodo from './UpdateTodo';\n\nconst TodoListContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border: 1px solid black;\n  padding: 10px 16px;\n`;\n\nconst TodoListBody = styled.div`\n  display: flex;\n  height: 24px;\n`;\n\nconst TodoListCheckbox = styled.div`\n  margin: 0 20px 0 0;\n  width: 24px;\n  height: 24px;\n  border: solid 1px black;\n  border-radius: 50%;\n  text-align: center;\n  cursor: pointer;\n`;\n\nconst TodoListCheckboxActive = styled.div`\n  &::after {\n    content: 'V';\n    font-weight: bold;\n    display: block;\n    margin: 0 20px 0 0;\n    width: 24px;\n    height: 24px;\n    border: solid 1px black;\n    border-radius: 50%;\n    text-align: center;\n    cursor: pointer;\n  }\n`;\n\nconst TodoListText = styled.div`\n  font-size: 18px;\n`;\n\nconst TodoListTextActive = styled.div`\n  font-size: 18px;\n  text-decoration: line-through;\n  color: rgb(111, 110, 110);\n`;\n\nconst TodoListDelete = styled.div`\n  &:hover {\n    color: brown;\n    cursor: pointer;\n  }\n`;\n\nexport default function Todos({todos, filter, completedTodo, deleteTodo, updateTodo}) {\n  return (\n    <>\n      {todos.filter((todo) => {\n          if(filter === 'task') {\n            return todo.completed === false\n          } else if(filter === 'completed') {\n            return todo.completed === true\n          } else {\n            return todo\n          }\n        }).map((todo) => (\n        <TodoListContainer>\n          <TodoListBody>\n            {todo.completed === true ? <TodoListCheckboxActive onClick={() => {\n              completedTodo(todo.id)\n            }} /> : <TodoListCheckbox onClick={() => {\n              completedTodo(todo.id)\n            }} />}\n            <UpdateTodo todo={todo} updateTodo={updateTodo} />\n          </TodoListBody>\n          <TodoListDelete onClick={() => {\n            deleteTodo(todo.id)\n          }}>X</TodoListDelete>\n        </TodoListContainer>\n      ))}\n    </>\n  )\n}\n","import { connect } from 'react-redux'\nimport { completedTodo, deleteTodo, updateTodo } from '../redux/actions'\nimport Todos from '../components/Todos'\n\nconst mapStateToProps = (store) => {\n  return {\n    todos: store.todoState.todos,\n    filter: store.filterState.filter,\n  }\n}\n\nconst mapDispatchToProps =  {\n  completedTodo,\n  updateTodo,\n  deleteTodo,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos)","import React from 'react'\nimport styled from 'styled-components'\nimport AddTodoForm from './containers/AddTodoForm'\nimport TodoFilter from './containers/TodoFilter'\nimport Todos from './containers/Todos'\n\nconst TodoBox = styled.div`\n  max-width: 700px;\n  margin: 20px auto;\n  border-radius: 4px;\n  position: relative;\n`;\n\nconst Title = styled.div`\n  font-size: 48px;\n  font-weight: bold;\n  text-align: center;\n  padding: 20px 0 25px 0;\n`;\n\nfunction App() {\n  return (\n    <TodoBox>\n      <Title>Todolist</Title>\n      <AddTodoForm />\n      <TodoFilter />\n      <Todos />\n    </TodoBox>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_TODO, COMPLETED_TODO, CLEAR_TODOS, DELETE_TODO, UPDATE_TODO } from \"../actionType\";\n\nlet todoId = 0\n\nconst initialState = {\n  todos: []\n}\n\nexport default function todosReducer(state = initialState, action) {\n  switch(action.type) {\n    case ADD_TODO: {\n      return {\n        ...state,\n        todos: [...state.todos, {\n          id: todoId++,\n          content: action.payload.content,\n          completed: false,\n        }]\n      }\n    }\n    case COMPLETED_TODO: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if(todo.id !== action.payload.id) return todo\n          return {\n            ...todo,\n            completed: !todo.completed,\n          }\n        })\n      }\n    }\n    case UPDATE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if(todo.id !== action.payload.id) return todo\n          return {\n            ...todo,\n            content: action.payload.content,\n          }\n        })\n      }\n    }\n    case DELETE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.payload.id)\n      }\n    }\n    case CLEAR_TODOS: {\n      return {\n        ...state,\n        todos: [],\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}","import { CHANGE_FILTER } from \"../actionType\";\n\nconst initialState = {\n  filter: 'all'\n}\n\nexport default function filtersReducer(state = initialState, action) {\n  switch(action.type) {\n    case CHANGE_FILTER: {\n      return {\n        ...state,\n        filter: action.payload.filter,\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}","import todosReducer from \"./todos\";\n\nimport { combineReducers } from 'redux'\nimport todos from './todos'\nimport filter from './filters'\n\nexport default combineReducers({\n  todoState: todos,\n  filterState: filter,\n})","import { createStore } from 'redux'\nimport rootReducer from './reducers'\n\nexport default createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}